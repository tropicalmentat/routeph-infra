---
- name: Configure backend hosts
  hosts: database:api:reverse_proxy
  remote_user: rowt_admin
  become: yes

  tasks:
          - name: Add reverse_proxy nginx configuration
            template:
                    src: templates/routes.j2
                    dest: /etc/nginx/sites-available/routes
                    owner: root
                    group: root
            when: "'rp' in inventory_hostname"
            notify: "restart nginx"

          - name: Allow API server to access db
            postgresql_pg_hba:
                    dest: /etc/postgresql/12/main/pg_hba.conf
                    contype: host
                    users: rowt_admin
                    source: "{{ hostvars['api']['ansible_facts']['eth0']['ipv4']['address'] }}/32"
                    databases: rowt_db
                    method: md5
            when: "'db' in inventory_hostname"
            notify: "restart postgres"
            
          - name: Add gunicorn environment variables
            become: yes
            template:
                    src: templates/gunicorn_env.j2
                    dest: /var/www/routes-api/.env
                    owner: rowt_admin
                    group: www-data 
            when: '"api" in inventory_hostname'
            notify: 
                - "restart routes-api"
                - "daemon-reload"

          - name: Allow postgres service to listen to traffic from API server
            lineinfile:
                    backup: yes
                    path: /etc/postgresql/12/main/postgresql.conf
                    regex: '.*listen_addresses.*'
                    state: present
                    line: "listen_addresses='*'"
            when: "'db' in inventory_hostname"
            notify: "restart postgres"

          - name: Change ownership of api filestructure
            file:
                    path: /var/www/routes-api
                    state: directory
                    recurse: yes
                    owner: rowt_admin
                    group: www-data
            when: "'api' in inventory_hostname"
            notify: "restart nginx"
          
          - name: Create symbolic link of sites-available to sites-enabled
            become: yes
            file:
                    src: /etc/nginx/sites-available/routes-api
                    dest: /etc/nginx/sites-enabled/routes-api
                    owner: root
                    group: root
                    state: link
            when: "'api' in inventory_hostname"
            notify: "restart nginx"

          - name: Create symbolic link of routes frontend to sites-enabled
            become: yes
            file:
                    src: /etc/nginx/sites-available/routes
                    dest: /etc/nginx/sites-enabled/routes
                    owner: root
                    group: root
                    state: link
            when: "'rp' in inventory_hostname"
            notify: "restart nginx"

  handlers:
          - name: Restart postgres service
            service:
                    name: postgresql
                    state: restarted
            listen: "restart postgres"

          - name: Restart nginx service
            service:
                    name: nginx
                    state: restarted
            listen: "restart nginx"

          - name: Restart routes-api service
            service:
                    name: routes-api
                    state: restarted
            listen: "restart routes-api"

          - name: reload systemd daemon
            systemd:
                    daemon_reload: yes
            listen: "daemon-reload"

# TODO: Configure postgresql.conf
# TODO: Configure reverse proxy configs
# TODO: Add handlers to restart nginx and postgres services
